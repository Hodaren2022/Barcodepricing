import React, { useState, useEffect, useRef } from 'react';
// ... 其他依賴項 (如 Tailwind, API 呼叫等)

const AIOcrCaptureModal = ({ theme, onAnalysisSuccess, onClose }) => {
    // 儲存 MediaStream 物件
    const [stream, setStream] = useState(null);
    const videoRef = useRef(null);
    const [error, setError] = useState('');

    // 【核心邏輯：在 Modal 開啟時請求並啟動串流】
    useEffect(() => {
        const getCameraStream = async () => {
            try {
                // 1. 請求權限並取得串流 (這裡會觸發使用者授權提示)
                const mediaStream = await navigator.mediaDevices.getUserMedia({
                    video: {
                        facingMode: 'environment', // 優先使用後置鏡頭
                        width: { ideal: 1280 },
                        height: { ideal: 720 }
                    }
                });

                // 2. 成功：將串流連接到 video 元素
                setStream(mediaStream);
                if (videoRef.current) {
                    videoRef.current.srcObject = mediaStream;
                    videoRef.current.play();
                }
                setError('');
            } catch (err) {
                // 3. 失敗：處理使用者拒絕或相機無法使用的錯誤
                console.error("無法存取相機:", err);
                setError('無法存取相機。請確認已授予權限或相機未被其他程式使用。');
            }
        };

        getCameraStream();

        // 【關鍵優化：在 Modal 關閉或組件卸載時立即停止串流】
        return () => {
            if (stream) {
                console.log("釋放相機串流資源...");
                stream.getTracks().forEach(track => {
                    track.stop(); // 停止所有軌道 (關閉相機燈)
                });
            }
        };
    }, [stream]); // 注意: 這裡的依賴項需要確保只在組件 mount 時執行一次

    // 捕捉圖像、分析等功能...
    // const handleCapture = () => { /* ... 擷取邏輯 ... */ };

    return (
        <div className={`fixed inset-0 z-50 overflow-y-auto ${theme.bg} bg-opacity-95`}>
            {/* ... Modal UI 結構 ... */}
            <div className="p-4 max-w-lg mx-auto">
                <h2 className="text-xl font-bold mb-4 text-white">AI 視覺擷取</h2>
                
                {/* 顯示錯誤或 Video 串流 */}
                {error ? (
                    <div className="bg-red-500 p-4 text-white rounded-lg">錯誤: {error}</div>
                ) : (
                    <video 
                        ref={videoRef} 
                        className="w-full rounded-lg shadow-xl" 
                        autoPlay 
                        playsInline 
                        muted // 建議在開發時靜音，避免不必要的聲音
                    />
                )}
                
                {/* 動作按鈕 */}
                <div className="mt-4 flex justify-between">
                    <button 
                        onClick={onClose} 
                        className={`px-4 py-2 rounded-full font-semibold ${theme.secondary.bg} hover:${theme.secondary.hover.bg} text-white`}
                    >
                        取消
                    </button>
                    {/* ... 擷取按鈕 ... */}
                </div>
            </div>
        </div>
    );
};

export default AIOcrCaptureModal;
